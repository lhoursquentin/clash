#!/bin/sh

if [ -z "$KSH_VERSION" ]; then
  local=local
  func_suffix='()'
else
  # ksh93 needs the `function x {` syntax for typeset to act as local
  func_prefix='function '
  local=typeset
fi

quote() {
  input="${1?}"
  output=
  while [ -n "$input" ]; do
    new_input="${input#?}"
    char="${input%$new_input}"
    input="$new_input"
    case "$char" in
      "'")
        transformed_char="'"'"'"'"'"'"'"
        ;;
      *)
        transformed_char="$char"
        ;;
    esac
    output="$output$transformed_char"
  done
  printf '%s' "$output"
}

class(){
  name="$1"
  shift
  attr_defs=
  class_body='
    '"$func_prefix$name$func_suffix"' {'
  "$local" attr_index=1
  set -- 'name' "$@"
  nb_args="$#"
  while [ "$nb_args" -gt 0 ]; do
    case "$1" in
      _*)
        set -- "$@" "$1"
        ;;
      *)
        case "$1" in
          *_)
            attr_methods_defs="$attr_methods_defs"'
      eval '"$func_prefix"'"$1"'"'_$1$func_suffix"' {
        :
      }'"'"
            ;;
          *)
            attr_methods_defs="$attr_methods_defs"'
      eval '"$func_prefix"'"$1"'"'_$1$func_suffix"' {
        '"$local"' _tmp_getter='"'"'"'"'"'"''"$(quote "$'"$attr_index"'"; printf x)"''"'"'"'"'"'"'
        printf %s "${_tmp_getter%x}"
      }'"'"
            ;;
        esac
        if [ "$1" != 'name' ]; then
          attr_methods_defs="$attr_methods_defs"'
      eval '"$func_prefix"'"$1"'"'_$1"'_is'"$func_suffix"' {
        eval '"$func_prefix"''"'"'"$1"'"'_$1'"'"'"'"'"'"'"''"$func_suffix"' {
          '"$local"' _tmp_getter='"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'""'"'"$(quote "''$1''"; printf x)"'"'""'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'
          printf %s "${_tmp_getter%x}"
        }'"'"'"'"'"'"'"'"'
      }'"'"
        fi
        attr_defs="$attr_defs"'
        '"$local"' '"$1"'="$('"'"'$1'"'"''"_$1"'; printf x)"
        '"$1"'="${'"$1"'%x}"'
        attr_index="$((attr_index + 1))"
        ;;
    esac
    nb_args="$((nb_args - 1))"
    shift
  done
  attr_defs="$attr_defs"'
        '"$local"' self="$name"'
  for method do
    method_defs="$method_defs"'
      eval '"$func_prefix"'"$1"'"'"'_'"${method#_}"''"$func_suffix"' {'"$attr_defs"'
        '"$name$method"' "$@"
      }'"'"
  done
  class_body="$class_body"'
      '"$method_defs"'
      '"$attr_methods_defs"'
      eval '"'"''"$attr_defs"''"'"'
      _'"$name"' "$@" 2> /dev/null || :
    }
  '
  eval "$class_body"
}
