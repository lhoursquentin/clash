#!/bin/sh

if [ -z "$KSH_VERSION" ]; then
  local=local
  func_suffix='()'
else
  # ksh93 needs the `function x {` syntax for typeset to act as local
  func_prefix='function '
  local=typeset
fi

quote() {
  input="${1?}"
  output=
  while [ -n "$input" ]; do
    new_input="${input#?}"
    char="${input%$new_input}"
    input="$new_input"
    case "$char" in
      "'")
        transformed_char="'"'"'"'"'"'"'"
        ;;
      *)
        transformed_char="$char"
        ;;
    esac
    output="$output$transformed_char"
  done
  printf %s "$output"
}

del() {
  __internal_del__"$1"
}

class() {
  "$local" name="$1"
  shift
  "$local" attr_defs=
  "$local" attr_methods_defs=
  "$local" method_defs=
  "$local" constructor_attr_defs=
  "$local" delete_fn=
  "$local" class_body='
    '"$func_prefix$name"'_anonymous_id'"$func_suffix"' {
      printf %s _'"$name"'_anonymous_id_"${_'"$name"'_anonymous_id_count-0}"
    }

    '"$func_prefix$name$func_suffix"' {
      _'"$name"'_anonymous_id_count="$((_'"$name"'_anonymous_id_count + 1))"'
  "$local" attr_index=2
  "$local" nb_args="$#"
  "$local" __del__=false
  "$local" __getattr__=false
  "$local" __init__=false
  "$local" __setattr__=false
  for arg do
    case "$arg" in
       __del__     \
      |__getattr__ \
      |__init__    \
      |__setattr__ \
      )
        "$local" "$arg"=true
        ;;
    esac
  done
  while [ "$nb_args" -gt 0 ]; do
    case "$1" in
      _*)
        set -- "$@" "$1"
        ;;
      *)
        delete_fn="$delete_fn"'
        unset -f '"'"'"$1"'"'"'_'"$1"''
        case "$1" in
          *_)
            constructor_attr_defs="$constructor_attr_defs"'
      '"$local"' '"$1"'='
            attr_methods_defs="$attr_methods_defs"'
      eval '"$func_prefix"'"$1"'"'_$1$func_suffix"' {
        :
      }'"'"
            ;;
          *)
            constructor_attr_defs="$constructor_attr_defs"'
      '"$local"' '"$1"'="$'"$attr_index"'"'
            attr_methods_defs="$attr_methods_defs"'
      '"$local"' _tmp_getter="$'"$attr_index"'"
      case "$'"$attr_index"'" in
        *"'"'"'"*)
          _tmp_getter="$(quote "$'"$attr_index"'"; printf x)"
          _tmp_getter="${_tmp_getter%x}"
          ;;
      esac
      eval '"$func_prefix"'"$1"'"'_$1$func_suffix"' {
        printf %s '"'"'"'"'"'""$_tmp_getter""'"'"'"'"'"'
      }'"'"
            ;;
        esac
        delete_fn="$delete_fn"'
        unset -f '"'"'"$1"'"'"'_'"$1"'_is'
        attr_methods_defs="$attr_methods_defs"'
      eval '"$func_prefix"'"$1"'"'_$1"'_is'"$func_suffix"' {'
        if "$__setattr__"; then
          attr_methods_defs="$attr_methods_defs"'
        '"'"'"$1"'"'"'__setattr__ '"$1"' "$1"'
        fi
        attr_methods_defs="$attr_methods_defs"'
        if [ "$self" = '"'"'"$1"'"'"' ]; then
          '"$1"'="$1"
        fi
        '"$local"' _tmp_getter="$1"
        case "$1" in
          *"'"'"'"'"'"'"'"'"'"*)
            _tmp_getter="$(quote "$1"; printf x)"
            _tmp_getter="${_tmp_getter%x}"
            ;;
        esac
        eval '"$func_prefix"''"'"'"$1"'"'_$1'"'"'"'"'"'"'"''"$func_suffix"' {
          printf %s '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'""'"'"$_tmp_getter"'"'""'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'
        }'"'"'"'"'"'"'"'"'
      }'"'"
        attr_defs="$attr_defs"'
          '"$local"' '"$1"'="$('"'"'"$1"'"'"''"_$1"'; printf x)"
          '"$1"'="${'"$1"'%x}"'
        attr_index="$((attr_index + 1))"
        ;;
    esac
    nb_args="$((nb_args - 1))"
    shift
  done
  attr_defs='
        if [ -z "$_upper_object_id" ] ||
           [ "$_upper_object_id" != '"'"'"$1"'"'"' ]
        then'"$attr_defs"'
          '"$local"' self='"'"'"$1"'"'"'
          '"$local"' _upper_object_id='"'"'"$1"'"'"'
        fi'
  for method do
    delete_fn="$delete_fn"'
        unset -f '"'"'"$1"'"'"''"$method"''
    method_defs="$method_defs"'
      eval '"$func_prefix"'"$1"'"'"'_'"${method#_}"''"$func_suffix"' {'"$attr_defs"'
        '"$name$method"' "$@"
      }'"'"
  done
  if "$__del__"; then
    delete_fn="'"'"$1"'"'"'__del__
        '"$delete_fn"
  fi
  delete_fn='eval '"$func_prefix"'__internal_del__"$1"'"'"''"$func_suffix"' {
        '"$delete_fn"'
        unset -f __internal_del__'"'"'"$1"'"'"'
      }'"'"'
  '
  class_body="$class_body"'
      '"$method_defs"'
      '"$attr_methods_defs"'
      '"$delete_fn"

  if "$__init__"; then
    class_body="$class_body"'
      '"$local"' self="$1"
      '"$constructor_attr_defs"'
      shift
      '"$name"'__init__ "$@"'
  fi

  class_body="$class_body"'
    }'

  eval "$class_body"
}
